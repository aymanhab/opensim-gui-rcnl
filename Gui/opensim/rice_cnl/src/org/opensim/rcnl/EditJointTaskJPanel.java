/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.opensim.rcnl;

import java.awt.Dialog;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Vector;
import javax.swing.filechooser.FileFilter;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.Exceptions;
import org.opensim.modeling.AbstractProperty;
import org.opensim.modeling.OpenSimObject;
import org.opensim.modeling.PropertyDoubleList;
import org.opensim.modeling.PropertyHelper;
import org.opensim.modeling.PropertyObjectList;

/**
 *
 * @author Ayman-NMBL
 */
public class EditJointTaskJPanel extends javax.swing.JPanel {

    private OpenSimObject taskToEdit;
    private NumberFormat numFormat = NumberFormat.getInstance();
    private Vector<OpenSimObject> savedJointTasks = new Vector<OpenSimObject>();
    private JMPJointListModel jmpJointListModel = null;
    private PropertyObjectList poList;
    /**
     * Creates new form EditJointTaskJPanel
     */
    public EditJointTaskJPanel() {
        initComponents();
    }

    EditJointTaskJPanel(OpenSimObject jointPersonalizationTask) {
        taskToEdit = jointPersonalizationTask;
        AbstractProperty ap = jointPersonalizationTask.getPropertyByName("JMPJointList");
        poList = PropertyObjectList.updAs(ap);
        jmpJointListModel= new JMPJointListModel(poList);
        initComponents();
        jList1.setModel(jmpJointListModel);
        triallFilePath.setExtensionsAndDescription(".trc", "Measurement trial marker data");
        // Populate name, enabled, time-range and markers-file
        jTaskNameTextField.setText(jointPersonalizationTask.getName());
        AbstractProperty enabledProp = taskToEdit.getPropertyByName("is_enabled");
        jEnabledCheckBox.setSelected(PropertyHelper.getValueBool(enabledProp));
        AbstractProperty trcfileProp = taskToEdit.getPropertyByName("marker_file_name");
        String filepath = PropertyHelper.getValueString(trcfileProp);
        triallFilePath.setFileName(filepath);
        AbstractProperty timeRangeProp = taskToEdit.getPropertyByName("time_range");
        PropertyDoubleList pDoubleList = PropertyDoubleList.updAs(timeRangeProp);
        jTextField3.setText(String.valueOf(pDoubleList.getValue(0)));
        jTextField4.setText(String.valueOf(pDoubleList.getValue(1)));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTaskNameTextField = new javax.swing.JTextField();
        jEnabledCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        addJointButton = new javax.swing.JButton();
        editJointButton = new javax.swing.JButton();
        deleteJointButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        triallFilePath = new org.opensim.swingui.FileTextFieldAndChooser();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jLabel1.text")); // NOI18N

        jTaskNameTextField.setText(org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jTaskNameTextField.text")); // NOI18N
        jTaskNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTaskNameTextFieldFocusLost(evt);
            }
        });
        jTaskNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTaskNameTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jEnabledCheckBox, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jEnabledCheckBox.text")); // NOI18N
        jEnabledCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jEnabledCheckBoxItemStateChanged(evt);
            }
        });
        jEnabledCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEnabledCheckBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jLabel4.text")); // NOI18N

        jTextField3.setText(org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jTextField3.text")); // NOI18N
        jTextField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField3FocusLost(evt);
            }
        });
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setText(org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jTextField4.text")); // NOI18N
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField4FocusLost(evt);
            }
        });
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jPanel1.border.title"))); // NOI18N

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        org.openide.awt.Mnemonics.setLocalizedText(addJointButton, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.addJointButton.text")); // NOI18N
        addJointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJointButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(editJointButton, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.editJointButton.text")); // NOI18N
        editJointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editJointButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(deleteJointButton, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.deleteJointButton.text")); // NOI18N
        deleteJointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJointButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteJointButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addJointButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editJointButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(addJointButton)
                .addGap(18, 18, 18)
                .addComponent(editJointButton)
                .addGap(26, 26, 26)
                .addComponent(deleteJointButton)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(EditJointTaskJPanel.class, "EditJointTaskJPanel.jLabel11.text")); // NOI18N

        triallFilePath.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                triallFilePathStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEnabledCheckBox)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTaskNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(triallFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTaskNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jEnabledCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(triallFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTaskNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTaskNameTextFieldActionPerformed
        // TODO add your handling code here:
        taskToEdit.setName(jTaskNameTextField.getText());
    }//GEN-LAST:event_jTaskNameTextFieldActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            AbstractProperty timeRangeProp = taskToEdit.getPropertyByName("time_range");
            PropertyDoubleList pDoubleList = PropertyDoubleList.updAs(timeRangeProp);
            double startTime =pDoubleList.getValue(0);
            if (jTextField3.getText().trim().length()>0)
                startTime = numFormat.parse(jTextField3.getText().trim()).doubleValue();
            pDoubleList.setValue(0, startTime);
        } catch (ParseException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void triallFilePathStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_triallFilePathStateChanged
        //ikToolModel.getIKTool().setOutputMotionFileName(outputModelFilePath.getFileName());
        AbstractProperty trcfileProp = taskToEdit.getPropertyByName("marker_file_name");
        PropertyHelper.setValueString(triallFilePath.getFileName(), trcfileProp);
    }//GEN-LAST:event_triallFilePathStateChanged

    private void editJointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editJointButtonActionPerformed
        // TODO add your handling code here:
        int[] sels = jList1.getSelectedIndices();
        OpenSimObject selectedJointTask = (OpenSimObject)jmpJointListModel.get(sels[0]);
        //System.out.println(selectedJointTask.dump());
        AddEditJointPanel ejtPanel = new AddEditJointPanel(selectedJointTask);
        DialogDescriptor dlg = new DialogDescriptor(ejtPanel, "Create/Edit One Joint Task ");
        Dialog d = DialogDisplayer.getDefault().createDialog(dlg);
        d.setVisible(true);
        Object userInput = dlg.getValue();
        if (((Integer)userInput).compareTo((Integer)DialogDescriptor.OK_OPTION)==0){
            // Fire model changed event to update list in case name change
            jmpJointListModel.set(sels[0], selectedJointTask);
        }
    }//GEN-LAST:event_editJointButtonActionPerformed

    private void addJointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJointButtonActionPerformed
        // TODO add your handling code here:
        OpenSimObject newJointTask  = OpenSimObject.newInstanceOfType("JMPJoint");
        // set name to first valid joint in model
        savedJointTasks.add(newJointTask);
        AddEditJointPanel ejtPanel = new AddEditJointPanel(newJointTask);
        DialogDescriptor dlg = new DialogDescriptor(ejtPanel, "Create/Edit One Joint Task ");
        Dialog d = DialogDisplayer.getDefault().createDialog(dlg);
        d.setVisible(true);
        Object userInput = dlg.getValue();
        if (((Integer)userInput).compareTo((Integer)DialogDescriptor.OK_OPTION)==0){
            //System.out.println(newJointTask.dump());
            jmpJointListModel.addElement(newJointTask);
            newJointTask.markAdopted(); //indicate ownership will be transferred so that object is not deleted by gc
            poList.adoptAndAppendValue(newJointTask);
        }
        
    }//GEN-LAST:event_addJointButtonActionPerformed

    private void jEnabledCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jEnabledCheckBoxItemStateChanged
        // TODO add your handling code here:
        AbstractProperty enabledProp = taskToEdit.getPropertyByName("is_enabled");
        PropertyHelper.setValueBool(evt.getStateChange()==1, enabledProp);
    }//GEN-LAST:event_jEnabledCheckBoxItemStateChanged

    private void jTaskNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTaskNameTextFieldFocusLost
        // TODO add your handling code here:
         taskToEdit.setName(jTaskNameTextField.getText());
    }//GEN-LAST:event_jTaskNameTextFieldFocusLost

    private void jTextField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField3FocusLost
        jTextField3ActionPerformed(null);
    }//GEN-LAST:event_jTextField3FocusLost

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:();
            AbstractProperty timeRangeProp = taskToEdit.getPropertyByName("time_range");
            PropertyDoubleList pDoubleList = PropertyDoubleList.updAs(timeRangeProp);
            double endTime=pDoubleList.getValue(1);
            if (jTextField4.getText().trim().length()>0)
                endTime = numFormat.parse(jTextField4.getText().trim()).doubleValue();
            pDoubleList.setValue(1, endTime);
        } catch (ParseException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusLost
        // TODO add your handling code here:
        jTextField4ActionPerformed(null);
    }//GEN-LAST:event_jTextField4FocusLost

    private void jEnabledCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEnabledCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jEnabledCheckBoxActionPerformed

    private void deleteJointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJointButtonActionPerformed
        // TODO add your handling code here:
        int[] sels = jList1.getSelectedIndices();
        Vector<Integer> tasksToDelete = new Vector<Integer>();
        for (int i=0; i<sels.length; i++){
            OpenSimObject selectedJointTask = (OpenSimObject)jmpJointListModel.get(sels[i]);
            tasksToDelete.add(sels[i]);
        }
        // Delete items from jmpJointListModel in reverse order
        for (int r=tasksToDelete.size(); r >0; r-- ){
            jmpJointListModel.remove(tasksToDelete.get(r-1));
            poList.removeValueAtIndex(r-1);
        }
    }//GEN-LAST:event_deleteJointButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJointButton;
    private javax.swing.JButton deleteJointButton;
    private javax.swing.JButton editJointButton;
    private javax.swing.JCheckBox jEnabledCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTaskNameTextField;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private org.opensim.swingui.FileTextFieldAndChooser triallFilePath;
    // End of variables declaration//GEN-END:variables

}
